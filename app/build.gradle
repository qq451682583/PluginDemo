apply plugin: 'com.android.application'
//apply plugin: plugin.GZClassPlacePlugin
//
//GZPlace {
//    files file('src/config.txt')
//}

apply plugin: plugin.GZCostPlugin

//apply plugin: plugin.GZPlugin
//GZPlugin {
//    debugOn true
//}

println '============== app build.gradle start ========'
android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.android.plugindemo"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    // 指定编译版本
    compileOptions{
        targetCompatibility = JavaVersion.VERSION_1_7
        sourceCompatibility = JavaVersion.VERSION_1_7
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':grouter')
    implementation project(':grouter_annotaion')
    implementation project(':plugin_model1')
    implementation project(':plugin_model2')

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
}

println '=== getProjectDir = ' + getProjectDir().toPath().toString()
beforeEvaluate {
    println "====== beforeEvaluate ======"
}

afterEvaluate {
    println "====== afterEvaluate ======"
    getChildProjects().forEach{key, value ->
        println '=== forEach key = ' + key
        println '=== forEach value = ' + value.getProjectDir().toPath().toString();
    }
}

println '============== app build.gradle end ========'
